<<<<<<< HEAD
{
  "tabs": {
    "map": {
      "trans": "Map",
      "eng": "Map"
    },
    "inventory": {
      "trans": "Inventory",
      "eng": "Inventory"
    },
    "quest": {
      "trans": "Quest",
      "eng": "Quest"
    },
    "chat": {
      "trans": "Chat",
      "eng": "Chat"
    },
    "profile": {
      "trans": "Profile",
      "eng": "Profile"
    }
  },
  "levelType": {
    "normal": {
      "name": {
        "trans": "level",
        "eng": "level"
      }
    },
    "print": {
      "name": {
        "trans": "printing rank",
        "eng": "printing rank"
      }
    },
    "medical": {
      "name": {
        "trans": "medical science",
        "eng": "medical science"
      }
    },
    "ammo": {
      "name": {
        "trans": "ammo crafting",
        "eng": "ammo crafting"
      }
    }
  },
  "location": {
    "mainHub": {
      "name": {
        "trans": "Shangri-La City center",
        "eng": "Shangri-La City center"
      },
      "description": {
        "trans": "[Central Hub]\r\n        One of the busiest cities in the continent, here you can find all sorts of people from around the globe.",
        "eng": "[Central Hub]\r\n        One of the busiest cities in the continent, here you can find all sorts of people from around the globe."
      },
      "toStation": {
        "name": {
          "trans": "Go to Hyper Train Central Station",
          "eng": "Go to Hyper Train Central Station"
        },
        "tut": {
          "trans": "Start your adventure to epic loots here",
          "eng": "Start your adventure to epic loots here"
        }
      },
      "toJob": {
        "name": {
          "trans": "Go to Shangri-La Commercial Area",
          "eng": "Go to Shangri-La Commercial Area"
        },
        "tut": {
          "trans": "You can complete AFK jobs to increase your skills here",
          "eng": "You can complete AFK jobs to increase your skills here"
        }
      },
      "toMarket": {
        "name": {
          "trans": "Go to Shangri-La Market Street",
          "eng": "Go to Shangri-La Market Street"
        },
        "tut": {
          "trans": "You can sell or buy items from other players here",
          "eng": "You can sell or buy items from other players here"
        }
      }
    },
    "job": {
      "name": {
        "trans": "Shangri-La Commercial Area",
        "eng": "Shangri-La Commercial Area"
      },
      "description": {
        "trans": "[Job Hub]\r\n        Many shops and Businesses, a perfect location to try out your skills.",
        "eng": "[Job Hub]\r\n        Many shops and Businesses, a perfect location to try out your skills."
      },
      "toMainHub": {
        "name": {
          "trans": "Return to Shangri-La City Center",
          "eng": "Return to Shangri-La City Center"
        }
      }
    },
    "market": {
      "name": {
        "trans": "Shangri-La Market Street",
        "eng": "Shangri-La Market Street"
      },
      "description": {
        "trans": "[Player Market]\r\n        The famous market street in Shangri-La. Loads of market stalls fill the street.\r\n        Maybe you can find something you need or set up shop yourself.",
        "eng": "[Player Market]\r\n        The famous market street in Shangri-La. Loads of market stalls fill the street.\r\n        Maybe you can find something you need or set up shop yourself."
      },
      "toMainHub": {
        "name": {
          "trans": "Return to Shangri-La City Center",
          "eng": "Return to Shangri-La City Center"
        }
      }
    },
    "station": {
      "name": {
        "trans": "Hyper Train Central Station",
        "eng": "[Adventure]\r\n        Using the hyperloop you can travel at super speed across the continent with ease."
      }
    },
    "zone": {
      "backToMainHub": {
        "name": {
          "trans": "Back to city center",
          "eng": "Return to ${mainHubName}",
          "vars": [
            "mainHubName"
          ]
        }
      },
      "toSegment": {
        "name": {
          "vars": [
            "segmentStationName"
          ],
          "trans": "back to ${segmentStationName}",
          "eng": "back to ${segmentStationName}"
        },
        "description": {
          "vars": [
            "segmentStationName"
          ],
          "trans": "return to ${segmentStationName}",
          "eng": "return to ${segmentStationName}"
        }
      },
      "toStation": {
        "description": {
          "trans": "Return to Hyper Train Station",
          "eng": "Return to Hyper Train Station"
        }
      }
    },
    "segment": {
      "locked": {
        "description": {
          "trans": "Gather all 3 different Key Fragments from Dungeons in each 3 zones in previous station, \r\n                    then go to [Terminal] at City Center [Hub] to brute-force (Craft) the key required to unlock this area",
          "eng": "Gather all 3 different Key Fragments from Dungeons in each 3 zones in previous station, \r\n                    then go to [Terminal] at City Center [Hub] to brute-force (Craft) the key required to unlock this area"
        }
      },
      "tut": {
        "trans": "Start with level 1 to 10 area",
        "eng": "Start with level 1 to 10 area"
      },
      "toZone": {
        "tut": {
          "vars": [
            "segmentStationName"
          ],
          "trans": "Continue here to fight level 1 enemy",
          "eng": "Continue here to fight level 1 enemy"
        },
        "description": {
          "vars": [
            "zoneName"
          ],
          "trans": "Go to ${zoneName}",
          "eng": "Go to ${zoneName}"
        }
      }
    }
  },
  "npc": {
    "unitExchange": {
      "name": {
        "trans": "Arasaka Unit Exchange",
        "eng": "Arasaka Unit Exchange"
      },
      "tut": {
        "trans": "You can purchase global buff items here",
        "eng": "You can purchase global buff items here"
      }
    },
    "cosmetic": {
      "name": {
        "trans": "Cosmetic Cyberwear",
        "eng": "Cosmetic Cyberwear"
      },
      "tut": {
        "trans": "If you liked the game, please consider donation :)",
        "eng": "If you liked the game, please consider donation :)"
      }
    },
    "printer": {
      "name": {
        "trans": "Molecular 3d Printer",
        "eng": "Molecular 3d Printer"
      },
      "tut": {
        "trans": "You can use your Cache to print new equipment here",
        "eng": "You can use your Cache to print new equipment here"
      }
    },
    "weaponSmith": {
      "name": {
        "trans": "Weapon Smith",
        "eng": "Weapon Smith"
      }
    },
    "terminal": {
      "name": {
        "trans": "Terminal",
        "eng": "Terminal"
      },
      "tut": {
        "trans": "To progress to next area, you need to use get Secret Key Fragments from dungeons, \r\n        and use Terminal to Brute Force the key for next area",
        "eng": "To progress to next area, you need to use get Secret Key Fragments from dungeons, \r\n        and use Terminal to Brute Force the key for next area"
      }
    },
    "store": {
      "name": {
        "trans": "Trinoky Mart",
        "eng": "Trinoky Mart"
      }
    },
    "bank": {
      "name": {
        "trans": "Bank of Arasaka",
        "eng": "Bank of Arasaka"
      }
    }
  },
  "action": {
    "increasePrint": {
      "name": {
        "trans": "work in printing factory",
        "eng": "work in printing factory"
      },
      "description": {
        "trans": "Improve Printing Rank without sacrificing tech scrap, this may help to increase the level of your prints.",
        "eng": "Improve Printing Rank without sacrificing tech scrap, this may help to increase the level of your prints."
      }
    },
    "increaseMedical": {
      "name": {
        "trans": "Hack a Body Mod Clinic",
        "eng": "Hack a Body Mod Clinic"
      },
      "description": {
        "trans": "Download useful data from a local body mod clinic to craft higher quality medical bots and drones.",
        "eng": "Download useful data from a local body mod clinic to craft higher quality medical bots and drones."
      }
    },
    "increaseAmmo": {
      "name": {
        "trans": "Improve Ammunition",
        "eng": "Improve Ammunition"
      },
      "description": {
        "trans": "Tinker with ammunition, to find more effective ways of crafting it.",
        "eng": "Tinker with ammunition, to find more effective ways of crafting it."
      }
    },
    "reverseEngineer": {
      "name": {
        "trans": "Reverse Engineer Scraps",
        "eng": "Reverse engineer tech scrap to improve your Print Rank. \r\n        You’ll need to sacrifice some of your tech scrap."
      }
    },
    "reverseMining": {
      "name": {
        "trans": "initiate crypto mining",
        "eng": "initiate crypto mining"
      },
      "description": {
        "trans": "Engaging in crypto mining will earn you Bitcoins, however due to the intense use of the Hash Processors, the Quantum Processing Unit, otherwise known as the QPU, will often burn out.",
        "eng": "Engaging in crypto mining will earn you Bitcoins, however due to the intense use of the Hash Processors, the Quantum Processing Unit, otherwise known as the QPU, will often burn out."
      }
    },
    "autoFarm": {
      "name": {
        "trans": "Deploy farm bot",
        "eng": "Deploy farm bot"
      },
      "description": {
        "trans": "[AFK Exp Farm]\r\n        Deploys an AI to dungeon for you. This will use up an AI Core, they usually only just manage the one trip.",
        "eng": "[AFK Exp Farm]\r\n        Deploys an AI to dungeon for you. This will use up an AI Core, they usually only just manage the one trip."
      },
      "tut": {
        "trans": "You can use your AI Core to Auto-Farm enemies while you AFK",
        "eng": "You can use your AI Core to Auto-Farm enemies while you AFK"
      }
    },
    "scavenge": {
      "name": {
        "vars": [
          "zoneName"
        ],
        "trans": "Scavenge in ${zoneName}",
        "eng": "Scavenge in ${zoneName}"
      },
      "description": {
        "vars": [
          "zoneName"
        ],
        "trans": "[AFK Resource Gather]\r\n                    Search around in ${zoneName} and scavenge for useful items.\r\n                    Who knows, maybe you'll get lucky!",
        "eng": "[AFK Resource Gather]\r\n                    Search around in ${zoneName} and scavenge for useful items.\r\n                    Who knows, maybe you'll get lucky!"
      }
    }
  },
  "receive": {
    "item": {
      "vars": [
        "amount",
        "itemName"
      ],
      "trans": "You received ${amount} ${itemName}",
      "eng": "You received ${amount} ${itemName}"
    }
  },
  "tier": {
    "trash": {
      "name": {
        "trans": "trash",
        "eng": "trash"
      }
    },
    "common": {
      "name": {
        "trans": "common",
        "eng": "common"
      }
    },
    "highQuality": {
      "name": {
        "trans": "high quality",
        "eng": "high quality"
      }
    },
    "rare": {
      "name": {
        "trans": "rare",
        "eng": "rare"
      }
    },
    "legendary": {
      "name": {
        "trans": "legendary",
        "eng": "legendary"
      }
    },
    "epic": {
      "name": {
        "trans": "epic",
        "eng": "epic"
      }
    }
  },
  "item": {
    "experienceShard": {
      "name": {
        "vars": [
          "levelName"
        ],
        "trans": "Experience Shard [${levelName}]",
        "eng": "Experience Shard [${levelName}]"
      },
      "description": {
        "vars": [
          "levelName"
        ],
        "trans": "A shard that contains someone's memory and experience, if used you may gain ${levelName} experience from this",
        "eng": "A shard that contains someone's memory and experience, if used you may gain ${levelName} experience from this"
      }
    },
    "keyFragment": {
      "name": {
        "vars": [
          "segmentDisplayName",
          "fragmentNum"
        ],
        "trans": "${segmentDisplayName} Key Fragment ${fragmentNum}",
        "eng": "${segmentDisplayName} Key Fragment ${fragmentNum}"
      },
      "description": {
        "vars": [
          "segmentDisplayName"
        ],
        "trans": "Secret key Fragment Use to brute-force a secret key.\r\n                                Use the Terminal at city center [Hub] to brute-force a ${segmentDisplayName} secret key.\r\n                                You can acquire each of the 3 required keys in each dungeon (both normal or challenge),\r\n                                when you acquired 3 keys, you may use Terminal to brute-force (Craft) a key to the next area",
        "eng": "Secret key Fragment Use to brute-force a secret key.\r\n                                Use the Terminal at city center [Hub] to brute-force a ${segmentDisplayName} secret key.\r\n                                You can acquire each of the 3 required keys in each dungeon (both normal or challenge),\r\n                                when you acquired 3 keys, you may use Terminal to brute-force (Craft) a key to the next area"
      }
    },
    "cache": {
      "name": {
        "vars": [
          "tierName",
          "typeName"
        ],
        "trans": "${tierName} ${typeName} cache",
        "eng": "${tierName} ${typeName} cache"
      },
      "description": {
        "vars": [
          "typeName"
        ],
        "trans": "A ${typeName} cache contains information used for Molecular 3D Printing, \r\n                    You can create a ${typeName} with the [Molecular 3d Printer] at [Central Hub].\r\n                    \r\n                    Pro tip: The level of item you get from printing is determined by your Printing Rank,\r\n                    so always print the trash ones first, as they cost less and useful to level up your Printing Rank",
        "eng": "A ${typeName} cache contains information used for Molecular 3D Printing, \r\n                    You can create a ${typeName} with the [Molecular 3d Printer] at [Central Hub].\r\n                    \r\n                    Pro tip: The level of item you get from printing is determined by your Printing Rank,\r\n                    so always print the trash ones first, as they cost less and useful to level up your Printing Rank"
      }
    }
  },
  "dungeon": {
    "normal": {
      "description": {
        "vars": [
          "expMultiplier",
          "keyFragmentDisplayName"
        ],
        "trans": "Recommended Level:　${maxLevel}\r\n                    ${expMultiplier}x times more EXP!\r\n                    Drops ${keyFragmentDisplayName}",
        "eng": "Recommended Level:　${maxLevel}\r\n                    ${expMultiplier}x times more EXP!\r\n                    Drops ${keyFragmentDisplayName}"
      },
      "startName": {
        "vars": [
          "zoneName"
        ],
        "trans": "Explore ${zoneName}",
        "eng": "Explore ${zoneName}"
      },
      "tut": {
        "vars": [
          "zoneName"
        ],
        "trans": "Dive into dungeon to get even more exp and loot!\r\n                        remember to buy some healing item! you won\"t regen after battle in dungeon` ),\r\n                        shouldShow: (player) => player.getAverageItemLevel() > 5\r\n                    },\r\n                    config: {\r\n                        criticalRoom: [3, 4],\r\n                        additionalRoom: [2, 3],\r\n                        tiles: {\r\n                            SUPPLY_CRATE_1: { minMax: [0, 2] },\r\n                            AMMO_CRATE_1: { minMax: [0, 2] }\r\n                        },\r\n                        lastRoomTiles: {\r\n                            LOOT_CRATE: { minMax: [3, 4] },\r\n                            AMMO_CRATE_1: { minMax: [2, 3] },\r\n                            DYNAMIC_SECRET_KEY: {\r\n                                minMax: [1, 1],\r\n                                extraReward: {\r\n                                    items: [{ itemType: secreteKeyFragmentId as any }]\r\n                                }\r\n                            }\r\n                        },\r\n                        enemy: {\r\n                            normalRoom: [{\r\n                                amount: [2, 3],\r\n                                type: zoneId\r\n                            }],\r\n                            lastRoom: [{\r\n                                amount: [4, 6],\r\n                                type: zoneId,\r\n                            }]\r\n                        },\r\n                    }\r\n                });\r\n                DungeonSetting.values.push(normalDungeon);\r\n                const challengeDungeon = new DungeonSetting({\r\n                    name: challengeDungeonId,\r\n                    startName: lang('dungeon.challenge.startName', `attack ${zoneName}",
        "eng": "Dive into dungeon to get even more exp and loot!\r\n                        remember to buy some healing item! you won\"t regen after battle in dungeon` ),\r\n                        shouldShow: (player) => player.getAverageItemLevel() > 5\r\n                    },\r\n                    config: {\r\n                        criticalRoom: [3, 4],\r\n                        additionalRoom: [2, 3],\r\n                        tiles: {\r\n                            SUPPLY_CRATE_1: { minMax: [0, 2] },\r\n                            AMMO_CRATE_1: { minMax: [0, 2] }\r\n                        },\r\n                        lastRoomTiles: {\r\n                            LOOT_CRATE: { minMax: [3, 4] },\r\n                            AMMO_CRATE_1: { minMax: [2, 3] },\r\n                            DYNAMIC_SECRET_KEY: {\r\n                                minMax: [1, 1],\r\n                                extraReward: {\r\n                                    items: [{ itemType: secreteKeyFragmentId as any }]\r\n                                }\r\n                            }\r\n                        },\r\n                        enemy: {\r\n                            normalRoom: [{\r\n                                amount: [2, 3],\r\n                                type: zoneId\r\n                            }],\r\n                            lastRoom: [{\r\n                                amount: [4, 6],\r\n                                type: zoneId,\r\n                            }]\r\n                        },\r\n                    }\r\n                });\r\n                DungeonSetting.values.push(normalDungeon);\r\n                const challengeDungeon = new DungeonSetting({\r\n                    name: challengeDungeonId,\r\n                    startName: lang('dungeon.challenge.startName', `attack ${zoneName}"
      }
    },
    "challenge": {
      "description": {
        "vars": [
          "maxLevel",
          "keyFragmentDisplayName",
          "expMultiplier"
        ],
        "trans": "Recommended Level:　${maxLevel}+ with co-op\r\n                    ${expMultiplier}x more EXP!\r\n                    Challenge mode dungeon, extra loot and exp.\r\n                    Drops ${keyFragmentDisplayName}\r\n                    Not advised to enter if your level is too low",
        "eng": "Recommended Level:　${maxLevel}+ with co-op\r\n                    ${expMultiplier}x more EXP!\r\n                    Challenge mode dungeon, extra loot and exp.\r\n                    Drops ${keyFragmentDisplayName}\r\n                    Not advised to enter if your level is too low"
      },
      "tut": {
        "trans": "Are you strong enough? try it out on Challenge Dungeon,\r\n                        there is a strong boss and tons of loot at the end waiting for you!\r\n                        Its recommended to attempt this with other players.` ),\r\n                        shouldShow: (player) => player.getAverageItemLevel() >= 7\r\n                    },\r\n                    config: {\r\n                        criticalRoom: [4, 5],\r\n                        additionalRoom: [2, 3],\r\n                        tiles: {\r\n                            SUPPLY_CRATE_1: { minMax: [0, 2] },\r\n                            AMMO_CRATE_1: { minMax: [0, 2] },\r\n                        },\r\n                        lastRoomTiles: {\r\n                            LOOT_CRATE: { minMax: [3, 4] },\r\n                            AMMO_CRATE_1: { minMax: [2, 3] },\r\n                            DYNAMIC_TILE: {\r\n                                minMax: [2, 4],\r\n                                extraReward: {\r\n                                    items: [{ itemType: \"EXP_MEMORY\", chance: 1 },\r\n                                    {\r\n                                        oneOf: this.MISC_EXPERIENCE_MEMORIES.map(id => ({ itemType: id, weight: 10 }) as IWeightedItemDrop),\r\n                                        chance: 0.1\r\n                                    }]\r\n                                },\r\n                                displayName: \"Exp Memory\",\r\n                                perPlayer: true\r\n                            },\r\n                            DYNAMIC_TILE_2: {\r\n                                minMax: [3, 4],\r\n                                extraReward: {\r\n                                    money: {\r\n                                        scaling: {\r\n                                            ...Config.CREATURE.DEFAULT_MONEY,\r\n                                            MULTIPLIER: Config.CREATURE.DEFAULT_MONEY.MULTIPLIER * 4\r\n                                        }\r\n                                    }\r\n                                },\r\n                                displayName: `${Config.CURRENCY_NAME} stash`,\r\n                                perPlayer: true,\r\n                            },\r\n                            DYNAMIC_SECRET_KEY: {\r\n                                minMax: [1, 1],\r\n                                extraReward: {\r\n                                    items: [{ itemType: secreteKeyFragmentId as any }]\r\n                                }\r\n                            }\r\n                        },\r\n                        enemy: {\r\n                            normalRoom: [{\r\n                                amount: [3, 4],\r\n                                type: zoneId\r\n                            }],\r\n                            lastRoom: [{\r\n                                amount: [4, 6],\r\n                                type: zoneId,\r\n                            },\r\n                            {\r\n                                amount: [1, 1],\r\n                                type: `BOSS_${zoneId}`,\r\n                            }]\r\n                        },\r\n                    }\r\n                });\r\n                DungeonSetting.values.push(challengeDungeon);\r\n\r\n\r\n                // CREATE CREATURES \r\n\r\n                const names: string[] = [];\r\n                for (let ii = 0; ii < 5; ii++) {\r\n                    names.push(TextGen.generateBadGuy(ran));\r\n                }\r\n\r\n                CreatureSetting.values.push(new CreatureSetting({\r\n                    name: zoneId,\r\n                    names,\r\n                    traitChance: 0.5,\r\n                    weight: 100,\r\n                    ...DEFAULT_OPTIONS\r\n                }));\r\n\r\n                const bossNames = TextGen.getBossNames();\r\n                CreatureSetting.values.push(new CreatureSetting({\r\n                    name: `BOSS_${zoneId}`,\r\n                    names: bossNames,\r\n                    traitChance: 0.5,\r\n                    weight: 100,\r\n                    ...DEFAULT_OPTIONS,\r\n                    healthFactor: 15,\r\n                    damageFactor: 2,\r\n                    expConfig: {\r\n                        ...DEFAULT_EXP,\r\n                        MULTIPLIER: DEFAULT_EXP.MULTIPLIER * 15\r\n                    },\r\n                    moneyConfig: {\r\n                        ...Config.CREATURE.DEFAULT_MONEY,\r\n                        MULTIPLIER: Config.CREATURE.DEFAULT_MONEY.MULTIPLIER * 15\r\n                    },\r\n                    drops: [...CreatureSetting.DEFAULT_DROPS,\r\n                    { itemType: \"UNKNOWN_EQUIPMENT\", amount: 1 },\r\n                    { itemType: \"UNKNOWN_EQUIPMENT\", amount: 1 },\r\n                    { itemType: \"UNKNOWN_EQUIPMENT\", amount: 1 },\r\n                    { itemType: \"UNKNOWN_EQUIPMENT\", amount: 1 },\r\n                    { itemType: \"UNKNOWN_WEAPON\", amount: 1 },\r\n                    { itemType: \"UNKNOWN_WEAPON\", amount: 1 },\r\n                    { itemType: \"AI_CORE\", minAmount: 3, maxAmount: 6 },\r\n                    { itemType: \"HASH_PROCESSOR\", minAmount: 3, maxAmount: 6 }\r\n                    ],\r\n                }));\r\n\r\n                zoneIndex++;\r\n                allZoneIndex++;\r\n            }\r\n            segmentLoc[\"options\"].linkedLocation.push({\r\n                to: \"STATION_1\",\r\n                displayName: lang('location.zone.toStation.name', \"back to Hyper Train Station",
        "eng": "Are you strong enough? try it out on Challenge Dungeon,\r\n                        there is a strong boss and tons of loot at the end waiting for you!\r\n                        Its recommended to attempt this with other players.` ),\r\n                        shouldShow: (player) => player.getAverageItemLevel() >= 7\r\n                    },\r\n                    config: {\r\n                        criticalRoom: [4, 5],\r\n                        additionalRoom: [2, 3],\r\n                        tiles: {\r\n                            SUPPLY_CRATE_1: { minMax: [0, 2] },\r\n                            AMMO_CRATE_1: { minMax: [0, 2] },\r\n                        },\r\n                        lastRoomTiles: {\r\n                            LOOT_CRATE: { minMax: [3, 4] },\r\n                            AMMO_CRATE_1: { minMax: [2, 3] },\r\n                            DYNAMIC_TILE: {\r\n                                minMax: [2, 4],\r\n                                extraReward: {\r\n                                    items: [{ itemType: \"EXP_MEMORY\", chance: 1 },\r\n                                    {\r\n                                        oneOf: this.MISC_EXPERIENCE_MEMORIES.map(id => ({ itemType: id, weight: 10 }) as IWeightedItemDrop),\r\n                                        chance: 0.1\r\n                                    }]\r\n                                },\r\n                                displayName: \"Exp Memory\",\r\n                                perPlayer: true\r\n                            },\r\n                            DYNAMIC_TILE_2: {\r\n                                minMax: [3, 4],\r\n                                extraReward: {\r\n                                    money: {\r\n                                        scaling: {\r\n                                            ...Config.CREATURE.DEFAULT_MONEY,\r\n                                            MULTIPLIER: Config.CREATURE.DEFAULT_MONEY.MULTIPLIER * 4\r\n                                        }\r\n                                    }\r\n                                },\r\n                                displayName: `${Config.CURRENCY_NAME} stash`,\r\n                                perPlayer: true,\r\n                            },\r\n                            DYNAMIC_SECRET_KEY: {\r\n                                minMax: [1, 1],\r\n                                extraReward: {\r\n                                    items: [{ itemType: secreteKeyFragmentId as any }]\r\n                                }\r\n                            }\r\n                        },\r\n                        enemy: {\r\n                            normalRoom: [{\r\n                                amount: [3, 4],\r\n                                type: zoneId\r\n                            }],\r\n                            lastRoom: [{\r\n                                amount: [4, 6],\r\n                                type: zoneId,\r\n                            },\r\n                            {\r\n                                amount: [1, 1],\r\n                                type: `BOSS_${zoneId}`,\r\n                            }]\r\n                        },\r\n                    }\r\n                });\r\n                DungeonSetting.values.push(challengeDungeon);\r\n\r\n\r\n                // CREATE CREATURES \r\n\r\n                const names: string[] = [];\r\n                for (let ii = 0; ii < 5; ii++) {\r\n                    names.push(TextGen.generateBadGuy(ran));\r\n                }\r\n\r\n                CreatureSetting.values.push(new CreatureSetting({\r\n                    name: zoneId,\r\n                    names,\r\n                    traitChance: 0.5,\r\n                    weight: 100,\r\n                    ...DEFAULT_OPTIONS\r\n                }));\r\n\r\n                const bossNames = TextGen.getBossNames();\r\n                CreatureSetting.values.push(new CreatureSetting({\r\n                    name: `BOSS_${zoneId}`,\r\n                    names: bossNames,\r\n                    traitChance: 0.5,\r\n                    weight: 100,\r\n                    ...DEFAULT_OPTIONS,\r\n                    healthFactor: 15,\r\n                    damageFactor: 2,\r\n                    expConfig: {\r\n                        ...DEFAULT_EXP,\r\n                        MULTIPLIER: DEFAULT_EXP.MULTIPLIER * 15\r\n                    },\r\n                    moneyConfig: {\r\n                        ...Config.CREATURE.DEFAULT_MONEY,\r\n                        MULTIPLIER: Config.CREATURE.DEFAULT_MONEY.MULTIPLIER * 15\r\n                    },\r\n                    drops: [...CreatureSetting.DEFAULT_DROPS,\r\n                    { itemType: \"UNKNOWN_EQUIPMENT\", amount: 1 },\r\n                    { itemType: \"UNKNOWN_EQUIPMENT\", amount: 1 },\r\n                    { itemType: \"UNKNOWN_EQUIPMENT\", amount: 1 },\r\n                    { itemType: \"UNKNOWN_EQUIPMENT\", amount: 1 },\r\n                    { itemType: \"UNKNOWN_WEAPON\", amount: 1 },\r\n                    { itemType: \"UNKNOWN_WEAPON\", amount: 1 },\r\n                    { itemType: \"AI_CORE\", minAmount: 3, maxAmount: 6 },\r\n                    { itemType: \"HASH_PROCESSOR\", minAmount: 3, maxAmount: 6 }\r\n                    ],\r\n                }));\r\n\r\n                zoneIndex++;\r\n                allZoneIndex++;\r\n            }\r\n            segmentLoc[\"options\"].linkedLocation.push({\r\n                to: \"STATION_1\",\r\n                displayName: lang('location.zone.toStation.name', \"back to Hyper Train Station"
      }
    }
  },
  "secretKey": {
    "name": {
      "vars": [
        "segmentDisplayName"
      ],
      "trans": "${segmentDisplayName} Secret Key",
      "eng": "${segmentDisplayName} Secret Key"
    },
    "unlockVerb": {
      "trans": "brute-force",
      "eng": "brute-force"
    }
  },
  "quest": {
    "progression": {
      "vars": [
        "segmentDisplayName"
      ],
      "trans": "Progression-${progressionId}",
      "eng": "Acquire 3 different Key Fragments from each dungeons located in ${segmentDisplayName},\r\n                these are used to create the key to next zone.\r\n                To craft the key, go to terminal in [HUB]"
    }
  }
}
=======
{}
>>>>>>> d4ee9bef3d006d7fa0f9b706d8539ac9270d1efb
