{
	"tabs": {
		"inventory": {
			"trans": "物品",
			"eng": "Inventory"
		},
		"quest": {
			"trans": "任務",
			"eng": "Quest"
		},
		"chat": {
			"trans": "聊天室",
			"eng": "Chat"
		},
		"profile": {
			"trans": "簡介",
			"eng": "Profile"
		},
		"map": {
			"trans": "地圖",
			"eng": "Map"
		}
	},
	"npc": {
		"unitExchange": {
			"name": {
				"trans": "荒坂Unit換匯",
				"eng": "Arasaka Unit Exchange"
			},
			"tut": {
				"trans": "可以在此購買全場加持物品",
				"eng": "You can purchase global buff items here"
			}
		},
		"cosmetic": {
			"name": {
				"trans": "裝飾用電馭裝件",
				"eng": "Cosmetic Cyberwear"
			},
			"tut": {
				"trans": "如果您喜歡我的遊戲的話,請考慮贊助喔~",
				"eng": "If you liked the game, please consider donation :)"
			}
		},
		"printer": {
			"name": {
				"trans": "分子合成機",
				"eng": "Molecular 3d Printer"
			},
			"tut": {
				"trans": "你可以用你的記憶體來製造裝備",
				"eng": "You can use your Cache to print new equipment here"
			}
		},
		"weaponSmith": {
			"name": {
				"trans": "裝備商人",
				"eng": "Weapon Smith"
			}
		},
		"terminal": {
			"name": {
				"trans": "終端機",
				"eng": "Terminal"
			},
			"tut": {
				"trans": "請從各副本中獲得共三個'密鑰碎片'然後去終端機進行暴力破解 以去得完整密鑰來進入下個區域",
				"eng": "To progress to next area, you need to use get Secret Key Fragments from dungeons, \r\n        and use Terminal to Brute Force the key for next area"
			}
		},
		"store": {
			"name": {
				"trans": "小T超商",
				"eng": "Trinoky Mart"
			}
		},
		"bank": {
			"name": {
				"trans": "荒板銀行",
				"eng": "Bank of Arasaka"
			}
		}
	},
	"receive": {
		"item": {
			"vars": ["amount", "itemName"],
			"trans": "你獲得了${amount}個${itemName}",
			"eng": "You received ${amount} ${itemName}"
		}
	},
	"levelType": {
		"normal": {
			"name": {
				"trans": "戰鬥等級",
				"eng": "level"
			}
		},
		"print": {
			"name": {
				"trans": "分子合成等級",
				"eng": "printing rank"
			}
		},
		"medical": {
			"name": {
				"trans": "醫學",
				"eng": "medical science"
			}
		},
		"ammo": {
			"name": {
				"trans": "彈藥製作",
				"eng": "ammo crafting"
			}
		}
	},
	"location": {
		"mainHub": {
			"name": {
				"trans": "香格里拉市中心",
				"eng": "Shangri-La City center"
			},
			"description": {
				"trans": "[市中心]\r\n        世上最大城市之一,在這裡你可以看到各種從世界各地來的人",
				"eng": "[Central Hub]\r\n        One of the busiest cities in the continent, here you can find all sorts of people from around the globe."
			},
			"toStation": {
				"name": {
					"trans": "前往超迴路列車總站",
					"eng": "Go to Hyper Train Central Station"
				},
				"tut": {
					"trans": "從這裡開始你的史詩及冒險!",
					"eng": "Start your adventure to epic loots here"
				}
			},
			"toJob": {
				"name": {
					"trans": "前往香格里拉商業區",
					"eng": "Go to Shangri-La Commercial Area"
				},
				"tut": {
					"trans": "You can complete AFK jobs to increase your skills here",
					"eng": "You can complete AFK jobs to increase your skills here"
				}
			},
			"toMarket": {
				"name": {
					"trans": "前往香格里拉市集",
					"eng": "Go to Shangri-La Market Street"
				},
				"tut": {
					"trans": "你可以在這裡與其他玩家進行買賣交易",
					"eng": "You can sell or buy items from other players here"
				}
			}
		},
		"job": {
			"name": {
				"trans": "香格里拉商業區",
				"eng": "Shangri-La Commercial Area"
			},
			"description": {
				"trans": "[工作中心]\r\n        這有許多商店和公司, 非常適合練習各種技能",
				"eng": "[Job Hub]\r\n        Many shops and Businesses, a perfect location to try out your skills."
			},
			"toMainHub": {
				"name": {
					"trans": "返回香格里拉市中心",
					"eng": "Return to Shangri-La City Center"
				}
			}
		},
		"market": {
			"name": {
				"trans": "香格里拉市集",
				"eng": "Shangri-La Market Street"
			},
			"description": {
				"trans": "[玩家市集]\r\n        在香格里拉非常出名的市集, 可以買到各式各樣的商品, 或許你也可以在這裡擺攤販賣物品",
				"eng": "[Player Market]\r\n        The famous market street in Shangri-La. Loads of market stalls fill the street.\r\n        Maybe you can find something you need or set up shop yourself."
			},
			"toMainHub": {
				"name": {
					"trans": "返回香格里拉市中心",
					"eng": "Return to Shangri-La City Center"
				}
			}
		},
		"station": {
			"name": {
				"trans": "超迴路列車總站",
				"eng": "[Adventure]\r\n        Using the hyperloop you can travel at super speed across the continent with ease."
			}
		},
		"zone": {
			"backToMainHub": {
				"name": {
					"trans": "返回${mainHubName}",
					"eng": "Return to ${mainHubName}",
					"vars": ["mainHubName"]
				}
			},
			"toSegment": {
				"name": {
					"vars": ["segmentStationName"],
					"trans": "返回${segmentStationName}",
					"eng": "back to ${segmentStationName}"
				},
				"description": {
					"vars": ["segmentStationName"],
					"trans": "返回${segmentStationName}",
					"eng": "return to ${segmentStationName}"
				}
			},
			"toStation": {
				"description": {
					"trans": "前往超迴路列車總站",
					"eng": "Return to Hyper Train Station"
				}
			}
		},
		"segment": {
			"locked": {
				"description": {
					"trans": "從上個地區中的各副本獲取三個密鑰碎片, \r\n然後去[市中心]使用[終端機]暴力破解獲取完整密鑰來解鎖此地區",
					"eng": "Gather all 3 different Key Fragments from Dungeons in each 3 zones in previous station, \r\n                    then go to [Terminal] at City Center [Hub] to brute-force (Craft) the key required to unlock this area"
				}
			},
			"tut": {
				"trans": "從1到10等區域開始",
				"eng": "Start with level 1 to 10 area"
			},
			"toZone": {
				"tut": {
					"vars": ["segmentStationName"],
					"trans": "點擊這裡與一等敵人戰鬥",
					"eng": "Continue here to fight level 1 enemy"
				},
				"description": {
					"vars": ["zoneName"],
					"trans": "前往${zoneName}",
					"eng": "Go to ${zoneName}"
				}
			}
		}
	},
	"action": {
		"increasePrint": {
			"name": {
				"trans": "去分子合成工廠工作",
				"eng": "work in printing factory"
			},
			"description": {
				"trans": "獲得分子合成經驗",
				"eng": "Improve Printing Rank without sacrificing tech scrap, this may help to increase the level of your prints."
			}
		},
		"increaseMedical": {
			"name": {
				"trans": "破解人體改造診所",
				"eng": "Hack a Body Mod Clinic"
			},
			"description": {
				"trans": "下載關於人體改造的機密資訊, 獲得醫學經驗值",
				"eng": "Download useful data from a local body mod clinic to craft higher quality medical bots and drones."
			}
		},
		"increaseAmmo": {
			"name": {
				"trans": "學習彈藥製造等級",
				"eng": "Improve Ammunition"
			},
			"description": {
				"trans": "學習彈藥知識, 尋找更有效率的製彈方式, 獲得彈藥製造等級",
				"eng": "Tinker with ammunition, to find more effective ways of crafting it."
			}
		},
		"reverseEngineer": {
			"name": {
				"trans": "對裝備碎片進行反向工程, 獲得分子合成經驗值, 使用裝備碎片",
				"eng": "Reverse engineer tech scrap to improve your Print Rank. \r\n        You’ll need to sacrifice some of your tech scrap."
			}
		},
		"reverseMining": {
			"name": {
				"trans": "進行加密貨幣挖礦",
				"eng": "initiate crypto mining"
			},
			"description": {
				"trans": "進行加密貨幣挖礦可獲得Bitcoins, 但因為超高頻計算使得雜湊處理器裡的量子計算單位在使用一次後損毀",
				"eng": "Engaging in crypto mining will earn you Bitcoins, however due to the intense use of the Hash Processors, the Quantum Processing Unit, otherwise known as the QPU, will often burn out."
			}
		},
		"autoFarm": {
			"name": {
				"trans": "使用自動打怪機器人",
				"eng": "Deploy farm bot"
			},
			"description": {
				"trans": "[掛機打怪]\r\n使用人工智能機器人幫你清理副本, 消耗一個AI Core",
				"eng": "[AFK Exp Farm]\r\n        Deploys an AI to dungeon for you. This will use up an AI Core, they usually only just manage the one trip."
			},
			"tut": {
				"trans": "使用AI Core來進行自動打怪",
				"eng": "You can use your AI Core to Auto-Farm enemies while you AFK"
			}
		},
		"scavenge": {
			"name": {
				"vars": ["zoneName"],
				"trans": "在${zoneName}搜刮物資",
				"eng": "Scavenge in ${zoneName}"
			},
			"description": {
				"vars": ["zoneName"],
				"trans": "[掛機搜刮]\r\n在${zoneName}附近找尋有用的物資, 說不定會找到寶喔",
				"eng": "[AFK Resource Gather]\r\n                    Search around in ${zoneName} and scavenge for useful items.\r\n                    Who knows, maybe you'll get lucky!"
			}
		}
	},
	"tier": {
		"trash": {
			"name": {
				"trans": "廢物",
				"eng": "trash"
			}
		},
		"common": {
			"name": {
				"trans": "普通",
				"eng": "common"
			}
		},
		"highQuality": {
			"name": {
				"trans": "高級",
				"eng": "high quality"
			}
		},
		"rare": {
			"name": {
				"trans": "稀有",
				"eng": "rare"
			}
		},
		"legendary": {
			"name": {
				"trans": "傳奇",
				"eng": "legendary"
			}
		},
		"epic": {
			"name": {
				"trans": "史詩",
				"eng": "epic"
			}
		}
	},
	"item": {
		"experienceShard": {
			"name": {
				"vars": ["levelName"],
				"trans": "Experience Shard [${levelName}]",
				"eng": "Experience Shard [${levelName}]"
			},
			"description": {
				"vars": ["levelName"],
				"trans": "A shard that contains someone's memory and experience, if used you may gain ${levelName} experience from this",
				"eng": "A shard that contains someone's memory and experience, if used you may gain ${levelName} experience from this"
			}
		},
		"keyFragment": {
			"name": {
				"vars": ["segmentDisplayName", "fragmentNum"],
				"trans": "${segmentDisplayName} Key Fragment ${fragmentNum}",
				"eng": "${segmentDisplayName} Key Fragment ${fragmentNum}"
			},
			"description": {
				"vars": ["segmentDisplayName"],
				"trans": "Secret key Fragment Use to brute-force a secret key.\r\n                                Use the Terminal at city center [Hub] to brute-force a ${segmentDisplayName} secret key.\r\n                                You can acquire each of the 3 required keys in each dungeon (both normal or challenge),\r\n                                when you acquired 3 keys, you may use Terminal to brute-force (Craft) a key to the next area",
				"eng": "Secret key Fragment Use to brute-force a secret key.\r\n                                Use the Terminal at city center [Hub] to brute-force a ${segmentDisplayName} secret key.\r\n                                You can acquire each of the 3 required keys in each dungeon (both normal or challenge),\r\n                                when you acquired 3 keys, you may use Terminal to brute-force (Craft) a key to the next area"
			}
		},
		"cache": {
			"name": {
				"vars": ["tierName", "typeName"],
				"trans": "${tierName} ${typeName} cache",
				"eng": "${tierName} ${typeName} cache"
			},
			"description": {
				"vars": ["typeName"],
				"trans": "A ${typeName} cache contains information used for Molecular 3D Printing, \r\n                    You can create a ${typeName} with the [Molecular 3d Printer] at [Central Hub].\r\n                    \r\n                    Pro tip: The level of item you get from printing is determined by your Printing Rank,\r\n                    so always print the trash ones first, as they cost less and useful to level up your Printing Rank",
				"eng": "A ${typeName} cache contains information used for Molecular 3D Printing, \r\n                    You can create a ${typeName} with the [Molecular 3d Printer] at [Central Hub].\r\n                    \r\n                    Pro tip: The level of item you get from printing is determined by your Printing Rank,\r\n                    so always print the trash ones first, as they cost less and useful to level up your Printing Rank"
			}
		}
	},
	"dungeon": {
		"normal": {
			"description": {
				"vars": ["expMultiplier", "keyFragmentDisplayName"],
				"trans": "Recommended Level:　${maxLevel}\r\n                    ${expMultiplier}x times more EXP!\r\n                    Drops ${keyFragmentDisplayName}",
				"eng": "Recommended Level:　${maxLevel}\r\n                    ${expMultiplier}x times more EXP!\r\n                    Drops ${keyFragmentDisplayName}"
			},
			"startName": {
				"vars": ["zoneName"],
				"trans": "Explore ${zoneName}",
				"eng": "Explore ${zoneName}"
			},
			"tut": {
				"vars": ["zoneName"],
				"trans": "Dive into dungeon to get even more exp and loot!\r\n                        remember to buy some healing item! you won\"t regen after battle in dungeon` ),\r\n                        shouldShow: (player) => player.getAverageItemLevel() > 5\r\n                    },\r\n                    config: {\r\n                        criticalRoom: [3, 4],\r\n                        additionalRoom: [2, 3],\r\n                        tiles: {\r\n                            SUPPLY_CRATE_1: { minMax: [0, 2] },\r\n                            AMMO_CRATE_1: { minMax: [0, 2] }\r\n                        },\r\n                        lastRoomTiles: {\r\n                            LOOT_CRATE: { minMax: [3, 4] },\r\n                            AMMO_CRATE_1: { minMax: [2, 3] },\r\n                            DYNAMIC_SECRET_KEY: {\r\n                                minMax: [1, 1],\r\n                                extraReward: {\r\n                                    items: [{ itemType: secreteKeyFragmentId as any }]\r\n                                }\r\n                            }\r\n                        },\r\n                        enemy: {\r\n                            normalRoom: [{\r\n                                amount: [2, 3],\r\n                                type: zoneId\r\n                            }],\r\n                            lastRoom: [{\r\n                                amount: [4, 6],\r\n                                type: zoneId,\r\n                            }]\r\n                        },\r\n                    }\r\n                });\r\n                DungeonSetting.values.push(normalDungeon);\r\n                const challengeDungeon = new DungeonSetting({\r\n                    name: challengeDungeonId,\r\n                    startName: lang('dungeon.challenge.startName', `attack ${zoneName}",
				"eng": "Dive into dungeon to get even more exp and loot!\r\n                        remember to buy some healing item! you won\"t regen after battle in dungeon` ),\r\n                        shouldShow: (player) => player.getAverageItemLevel() > 5\r\n                    },\r\n                    config: {\r\n                        criticalRoom: [3, 4],\r\n                        additionalRoom: [2, 3],\r\n                        tiles: {\r\n                            SUPPLY_CRATE_1: { minMax: [0, 2] },\r\n                            AMMO_CRATE_1: { minMax: [0, 2] }\r\n                        },\r\n                        lastRoomTiles: {\r\n                            LOOT_CRATE: { minMax: [3, 4] },\r\n                            AMMO_CRATE_1: { minMax: [2, 3] },\r\n                            DYNAMIC_SECRET_KEY: {\r\n                                minMax: [1, 1],\r\n                                extraReward: {\r\n                                    items: [{ itemType: secreteKeyFragmentId as any }]\r\n                                }\r\n                            }\r\n                        },\r\n                        enemy: {\r\n                            normalRoom: [{\r\n                                amount: [2, 3],\r\n                                type: zoneId\r\n                            }],\r\n                            lastRoom: [{\r\n                                amount: [4, 6],\r\n                                type: zoneId,\r\n                            }]\r\n                        },\r\n                    }\r\n                });\r\n                DungeonSetting.values.push(normalDungeon);\r\n                const challengeDungeon = new DungeonSetting({\r\n                    name: challengeDungeonId,\r\n                    startName: lang('dungeon.challenge.startName', `attack ${zoneName}"
			}
		},
		"challenge": {
			"description": {
				"vars": ["maxLevel", "keyFragmentDisplayName", "expMultiplier"],
				"trans": "Recommended Level:　${maxLevel}+ with co-op\r\n                    ${expMultiplier}x more EXP!\r\n                    Challenge mode dungeon, extra loot and exp.\r\n                    Drops ${keyFragmentDisplayName}\r\n                    Not advised to enter if your level is too low",
				"eng": "Recommended Level:　${maxLevel}+ with co-op\r\n                    ${expMultiplier}x more EXP!\r\n                    Challenge mode dungeon, extra loot and exp.\r\n                    Drops ${keyFragmentDisplayName}\r\n                    Not advised to enter if your level is too low"
			},
			"tut": {
				"trans": "Are you strong enough? try it out on Challenge Dungeon,\r\n                        there is a strong boss and tons of loot at the end waiting for you!\r\n                        Its recommended to attempt this with other players.` ),\r\n                        shouldShow: (player) => player.getAverageItemLevel() >= 7\r\n                    },\r\n                    config: {\r\n                        criticalRoom: [4, 5],\r\n                        additionalRoom: [2, 3],\r\n                        tiles: {\r\n                            SUPPLY_CRATE_1: { minMax: [0, 2] },\r\n                            AMMO_CRATE_1: { minMax: [0, 2] },\r\n                        },\r\n                        lastRoomTiles: {\r\n                            LOOT_CRATE: { minMax: [3, 4] },\r\n                            AMMO_CRATE_1: { minMax: [2, 3] },\r\n                            DYNAMIC_TILE: {\r\n                                minMax: [2, 4],\r\n                                extraReward: {\r\n                                    items: [{ itemType: \"EXP_MEMORY\", chance: 1 },\r\n                                    {\r\n                                        oneOf: this.MISC_EXPERIENCE_MEMORIES.map(id => ({ itemType: id, weight: 10 }) as IWeightedItemDrop),\r\n                                        chance: 0.1\r\n                                    }]\r\n                                },\r\n                                displayName: \"Exp Memory\",\r\n                                perPlayer: true\r\n                            },\r\n                            DYNAMIC_TILE_2: {\r\n                                minMax: [3, 4],\r\n                                extraReward: {\r\n                                    money: {\r\n                                        scaling: {\r\n                                            ...Config.CREATURE.DEFAULT_MONEY,\r\n                                            MULTIPLIER: Config.CREATURE.DEFAULT_MONEY.MULTIPLIER * 4\r\n                                        }\r\n                                    }\r\n                                },\r\n                                displayName: `${Config.CURRENCY_NAME} stash`,\r\n                                perPlayer: true,\r\n                            },\r\n                            DYNAMIC_SECRET_KEY: {\r\n                                minMax: [1, 1],\r\n                                extraReward: {\r\n                                    items: [{ itemType: secreteKeyFragmentId as any }]\r\n                                }\r\n                            }\r\n                        },\r\n                        enemy: {\r\n                            normalRoom: [{\r\n                                amount: [3, 4],\r\n                                type: zoneId\r\n                            }],\r\n                            lastRoom: [{\r\n                                amount: [4, 6],\r\n                                type: zoneId,\r\n                            },\r\n                            {\r\n                                amount: [1, 1],\r\n                                type: `BOSS_${zoneId}`,\r\n                            }]\r\n                        },\r\n                    }\r\n                });\r\n                DungeonSetting.values.push(challengeDungeon);\r\n\r\n\r\n                // CREATE CREATURES \r\n\r\n                const names: string[] = [];\r\n                for (let ii = 0; ii < 5; ii++) {\r\n                    names.push(TextGen.generateBadGuy(ran));\r\n                }\r\n\r\n                CreatureSetting.values.push(new CreatureSetting({\r\n                    name: zoneId,\r\n                    names,\r\n                    traitChance: 0.5,\r\n                    weight: 100,\r\n                    ...DEFAULT_OPTIONS\r\n                }));\r\n\r\n                const bossNames = TextGen.getBossNames();\r\n                CreatureSetting.values.push(new CreatureSetting({\r\n                    name: `BOSS_${zoneId}`,\r\n                    names: bossNames,\r\n                    traitChance: 0.5,\r\n                    weight: 100,\r\n                    ...DEFAULT_OPTIONS,\r\n                    healthFactor: 15,\r\n                    damageFactor: 2,\r\n                    expConfig: {\r\n                        ...DEFAULT_EXP,\r\n                        MULTIPLIER: DEFAULT_EXP.MULTIPLIER * 15\r\n                    },\r\n                    moneyConfig: {\r\n                        ...Config.CREATURE.DEFAULT_MONEY,\r\n                        MULTIPLIER: Config.CREATURE.DEFAULT_MONEY.MULTIPLIER * 15\r\n                    },\r\n                    drops: [...CreatureSetting.DEFAULT_DROPS,\r\n                    { itemType: \"UNKNOWN_EQUIPMENT\", amount: 1 },\r\n                    { itemType: \"UNKNOWN_EQUIPMENT\", amount: 1 },\r\n                    { itemType: \"UNKNOWN_EQUIPMENT\", amount: 1 },\r\n                    { itemType: \"UNKNOWN_EQUIPMENT\", amount: 1 },\r\n                    { itemType: \"UNKNOWN_WEAPON\", amount: 1 },\r\n                    { itemType: \"UNKNOWN_WEAPON\", amount: 1 },\r\n                    { itemType: \"AI_CORE\", minAmount: 3, maxAmount: 6 },\r\n                    { itemType: \"HASH_PROCESSOR\", minAmount: 3, maxAmount: 6 }\r\n                    ],\r\n                }));\r\n\r\n                zoneIndex++;\r\n                allZoneIndex++;\r\n            }\r\n            segmentLoc[\"options\"].linkedLocation.push({\r\n                to: \"STATION_1\",\r\n                displayName: lang('location.zone.toStation.name', \"back to Hyper Train Station",
				"eng": "Are you strong enough? try it out on Challenge Dungeon,\r\n                        there is a strong boss and tons of loot at the end waiting for you!\r\n                        Its recommended to attempt this with other players.` ),\r\n                        shouldShow: (player) => player.getAverageItemLevel() >= 7\r\n                    },\r\n                    config: {\r\n                        criticalRoom: [4, 5],\r\n                        additionalRoom: [2, 3],\r\n                        tiles: {\r\n                            SUPPLY_CRATE_1: { minMax: [0, 2] },\r\n                            AMMO_CRATE_1: { minMax: [0, 2] },\r\n                        },\r\n                        lastRoomTiles: {\r\n                            LOOT_CRATE: { minMax: [3, 4] },\r\n                            AMMO_CRATE_1: { minMax: [2, 3] },\r\n                            DYNAMIC_TILE: {\r\n                                minMax: [2, 4],\r\n                                extraReward: {\r\n                                    items: [{ itemType: \"EXP_MEMORY\", chance: 1 },\r\n                                    {\r\n                                        oneOf: this.MISC_EXPERIENCE_MEMORIES.map(id => ({ itemType: id, weight: 10 }) as IWeightedItemDrop),\r\n                                        chance: 0.1\r\n                                    }]\r\n                                },\r\n                                displayName: \"Exp Memory\",\r\n                                perPlayer: true\r\n                            },\r\n                            DYNAMIC_TILE_2: {\r\n                                minMax: [3, 4],\r\n                                extraReward: {\r\n                                    money: {\r\n                                        scaling: {\r\n                                            ...Config.CREATURE.DEFAULT_MONEY,\r\n                                            MULTIPLIER: Config.CREATURE.DEFAULT_MONEY.MULTIPLIER * 4\r\n                                        }\r\n                                    }\r\n                                },\r\n                                displayName: `${Config.CURRENCY_NAME} stash`,\r\n                                perPlayer: true,\r\n                            },\r\n                            DYNAMIC_SECRET_KEY: {\r\n                                minMax: [1, 1],\r\n                                extraReward: {\r\n                                    items: [{ itemType: secreteKeyFragmentId as any }]\r\n                                }\r\n                            }\r\n                        },\r\n                        enemy: {\r\n                            normalRoom: [{\r\n                                amount: [3, 4],\r\n                                type: zoneId\r\n                            }],\r\n                            lastRoom: [{\r\n                                amount: [4, 6],\r\n                                type: zoneId,\r\n                            },\r\n                            {\r\n                                amount: [1, 1],\r\n                                type: `BOSS_${zoneId}`,\r\n                            }]\r\n                        },\r\n                    }\r\n                });\r\n                DungeonSetting.values.push(challengeDungeon);\r\n\r\n\r\n                // CREATE CREATURES \r\n\r\n                const names: string[] = [];\r\n                for (let ii = 0; ii < 5; ii++) {\r\n                    names.push(TextGen.generateBadGuy(ran));\r\n                }\r\n\r\n                CreatureSetting.values.push(new CreatureSetting({\r\n                    name: zoneId,\r\n                    names,\r\n                    traitChance: 0.5,\r\n                    weight: 100,\r\n                    ...DEFAULT_OPTIONS\r\n                }));\r\n\r\n                const bossNames = TextGen.getBossNames();\r\n                CreatureSetting.values.push(new CreatureSetting({\r\n                    name: `BOSS_${zoneId}`,\r\n                    names: bossNames,\r\n                    traitChance: 0.5,\r\n                    weight: 100,\r\n                    ...DEFAULT_OPTIONS,\r\n                    healthFactor: 15,\r\n                    damageFactor: 2,\r\n                    expConfig: {\r\n                        ...DEFAULT_EXP,\r\n                        MULTIPLIER: DEFAULT_EXP.MULTIPLIER * 15\r\n                    },\r\n                    moneyConfig: {\r\n                        ...Config.CREATURE.DEFAULT_MONEY,\r\n                        MULTIPLIER: Config.CREATURE.DEFAULT_MONEY.MULTIPLIER * 15\r\n                    },\r\n                    drops: [...CreatureSetting.DEFAULT_DROPS,\r\n                    { itemType: \"UNKNOWN_EQUIPMENT\", amount: 1 },\r\n                    { itemType: \"UNKNOWN_EQUIPMENT\", amount: 1 },\r\n                    { itemType: \"UNKNOWN_EQUIPMENT\", amount: 1 },\r\n                    { itemType: \"UNKNOWN_EQUIPMENT\", amount: 1 },\r\n                    { itemType: \"UNKNOWN_WEAPON\", amount: 1 },\r\n                    { itemType: \"UNKNOWN_WEAPON\", amount: 1 },\r\n                    { itemType: \"AI_CORE\", minAmount: 3, maxAmount: 6 },\r\n                    { itemType: \"HASH_PROCESSOR\", minAmount: 3, maxAmount: 6 }\r\n                    ],\r\n                }));\r\n\r\n                zoneIndex++;\r\n                allZoneIndex++;\r\n            }\r\n            segmentLoc[\"options\"].linkedLocation.push({\r\n                to: \"STATION_1\",\r\n                displayName: lang('location.zone.toStation.name', \"back to Hyper Train Station"
			}
		}
	},
	"secretKey": {
		"name": {
			"vars": ["segmentDisplayName"],
			"trans": "${segmentDisplayName} Secret Key",
			"eng": "${segmentDisplayName} Secret Key"
		},
		"unlockVerb": {
			"trans": "brute-force",
			"eng": "brute-force"
		}
	},
	"quest": {
		"progression": {
			"vars": ["segmentDisplayName"],
			"trans": "Progression-${progressionId}",
			"eng": "Acquire 3 different Key Fragments from each dungeons located in ${segmentDisplayName},\r\n                these are used to create the key to next zone.\r\n                To craft the key, go to terminal in [HUB]"
		}
	}
}
