{
  "tabs": {
    "inventory": {
      "trans": "Inventar",
      "eng": "Inventory"
    },
    "quest": {
      "trans": "Quest",
      "eng": "Quest"
    },
    "chat": {
      "trans": "Chat",
      "eng": "Chat"
    },
    "profile": {
      "trans": "Profil",
      "eng": "Profile"
    },
    "map": {
      "trans": "Karte",
      "eng": "Map"
    }
  },
  "npc": {
    "unitExchange": {
      "name": {
        "trans": "Arasaka Unit Exchange",
        "eng": "Arasaka Unit Exchange"
      },
      "tut": {
        "trans": "You can purchase global buff items here",
        "eng": "You can purchase global buff items here"
      }
    },
    "cosmetic": {
      "name": {
        "trans": "Kosmetische Cyberwear",
        "eng": "Cosmetic Cyberwear"
      },
      "tut": {
        "trans": "Wenn dir das Spiel gefällt, denke bitte über eine Spende nach :)",
        "eng": "If you liked the game, please consider donation :)"
      }
    },
    "printer": {
      "name": {
        "trans": "Molekularer 3d Drucker",
        "eng": "Molecular 3d Printer"
      },
      "tut": {
        "trans": "Hier kannst du deine Kisten zum Drucken neuer Ausrüstung verwenden",
        "eng": "You can use your Cache to print new equipment here"
      }
    },
    "weaponSmith": {
      "name": {
        "trans": "Waffenschmied",
        "eng": "Weapon Smith"
      }
    },
    "terminal": {
      "name": {
        "trans": "Terminal",
        "eng": "Terminal"
      },
      "tut": {
        "trans": "Um zum nächsten Gebiet zu gelangen, musst du Schlüsselfragmente aus Dungeons holen. \r\n        Anschließend kannst du den Schlüssel zum nächsten Gebiet am Terminal brute forcen",
        "eng": "To progress to next area, you need to use get Secret Key Fragments from dungeons, \r\n        and use Terminal to Brute Force the key for next area"
      }
    },
    "store": {
      "name": {
        "trans": "Trinoky Markt",
        "eng": "Trinoky Mart"
      }
    },
    "bank": {
      "name": {
        "trans": "Bank von Arasaka",
        "eng": "Bank of Arasaka"
      }
    }
  },
  "receive": {
    "item": {
      "vars": [
        "amount",
        "itemName"
      ],
      "trans": "Du hast ${amount} ${itemName} erhalten",
      "eng": "You received ${amount} ${itemName}"
    }
  },
  "levelType": {
    "normal": {
      "name": {
        "trans": "level",
        "eng": "level"
      }
    },
    "print": {
      "name": {
        "trans": "drucker rang",
        "eng": "printing rank"
      }
    },
    "medical": {
      "name": {
        "trans": "medizinisches wissen",
        "eng": "medical science"
      }
    },
    "ammo": {
      "name": {
        "trans": "munition herstellen",
        "eng": "ammo crafting"
      }
    }
  },
  "location": {
    "mainHub": {
      "name": {
        "trans": "Shangri-La City center",
        "eng": "Shangri-La City center"
      },
      "description": {
        "trans": "[Central Hub]\r\n        Eine der beschäftigsten Städte des Kontinents, hier begegnest du verschiedensten Menschen aus aller Welt.",
        "eng": "[Central Hub]\r\n        One of the busiest cities in the continent, here you can find all sorts of people from around the globe."
      },
      "toStation": {
        "name": {
          "trans": "Gehe zur Hyper Train Central Station",
          "eng": "Go to Hyper Train Central Station"
        },
        "tut": {
          "trans": "Beginne hier dein Abenteuer und die Jagd nach epischen Gegenständen",
          "eng": "Start your adventure to epic loots here"
        }
      },
      "toJob": {
        "name": {
          "trans": "Gehe zur Shangri-La Commercial Area",
          "eng": "Go to Shangri-La Commercial Area"
        },
        "tut": {
          "trans": "Hier kannst du während deiner Abwesenheit Jobs ausführen, um deine Fähigkeiten zu verbessern.",
          "eng": "You can complete AFK jobs to increase your skills here"
        }
      },
      "toMarket": {
        "name": {
          "trans": "Gehe zur Shangri-La Market Street",
          "eng": "Go to Shangri-La Market Street"
        },
        "tut": {
          "trans": "Hier kannst du Gegenstände an andere Spieler verkaufen oder von ihnen kaufen",
          "eng": "You can sell or buy items from other players here"
        }
      }
    },
    "job": {
      "name": {
        "trans": "Shangri-La Commercial Area",
        "eng": "Shangri-La Commercial Area"
      },
      "description": {
        "trans": "[Job Hub]\r\n        Viele Läden und Geschäfte, der perfekte Ort, deine Fähigkeiten zu testen.",
        "eng": "[Job Hub]\r\n        Many shops and Businesses, a perfect location to try out your skills."
      },
      "toMainHub": {
        "name": {
          "trans": "Zurück zum Shangri-La City Center",
          "eng": "Return to Shangri-La City Center"
        }
      }
    },
    "market": {
      "name": {
        "trans": "Shangri-La Market Street",
        "eng": "Shangri-La Market Street"
      },
      "description": {
        "trans": "[Spieler Markt]\r\n        Die berühmte Markt Straße in Shangri-La. Jede menge Verkaufsstände füllen diese Straße.\r\n        Vielleicht findest du etwas, das du gebrauchen kannst oder eröffnest selbst einen Stand.",
        "eng": "[Player Market]\r\n        The famous market street in Shangri-La. Loads of market stalls fill the street.\r\n        Maybe you can find something you need or set up shop yourself."
      },
      "toMainHub": {
        "name": {
          "trans": "Zurück zum Shangri-La City Center",
          "eng": "Return to Shangri-La City Center"
        }
      }
    },
    "station": {
      "name": {
 	 	 	 	"trans": "Hyper Train Central Station",
 	 	 	 	"eng": "Hyper Train Central Station"
 	 	 	},
 	 	 	"description": {
 	 	 	 	"trans": "[Abenteuer]\r\n        Mit dem Hyperloop kannst du mit Supergeschwindigkeit quer über den gesamten Kontinent reisen.",
 	 	 	 	"eng": "[Adventure]\r\n        Using the hyperloop you can travel at super speed across the continent with ease."
 	 	 	}
    },
    "zone": {
      "backToMainHub": {
        "name": {
          "trans": "Zrück zum ${mainHubName}",
          "eng": "Return to ${mainHubName}",
          "vars": [
            "mainHubName"
          ]
        }
      },
      "toSegment": {
        "name": {
          "vars": [
            "segmentStationName"
          ],
          "trans": "Zurück zu ${segmentStationName}",
          "eng": "back to ${segmentStationName}"
        },
        "description": {
          "vars": [
            "segmentStationName"
          ],
          "trans": "Kehre zu ${segmentStationName} zurück",
          "eng": "return to ${segmentStationName}"
        }
      },
      "toStation": {
        "description": {
          "trans": "Kehre zur Hyper Train Station zurück",
          "eng": "Return to Hyper Train Station"
        }
      }
    },
    "segment": {
      "locked": {
        "description": {
          "trans": "Gather all 3 different Key Fragments from Dungeons in each 3 zones in previous station, \r\n                    then go to [Terminal] at City Center [Hub] to brute-force (Craft) the key required to unlock this area",
          "eng": "Gather all 3 different Key Fragments from Dungeons in each 3 zones in previous station, \r\n                    then go to [Terminal] at City Center [Hub] to brute-force (Craft) the key required to unlock this area"
        }
      },
      "tut": {
        "trans": "Beginne mit dem Gebiet für Level 1 bis 10",
        "eng": "Start with level 1 to 10 area"
      },
      "toZone": {
        "tut": {
          "vars": [
            "segmentStationName"
          ],
          "trans": "Bekämpfe hier Level 1 Gegner",
          "eng": "Continue here to fight level 1 enemy"
        },
        "description": {
          "vars": [
            "zoneName"
          ],
          "trans": "Gehe zu ${zoneName}",
          "eng": "Go to ${zoneName}"
        }
      }
    }
  },
  "item": {
    "experienceShard": {
      "name": {
        "vars": [
          "levelName"
        ],
        "trans": "Erfahrungssplitter [${levelName}]",
        "eng": "Experience Shard [${levelName}]"
      },
      "description": {
        "vars": [
          "levelName"
        ],
        "trans": "Ein Splitter, der die Erinnerungen und Erfahrungen von jemandem enthält. Bei Verwendung erhälst du vielleicht ${levelName} Erfahrung",
        "eng": "A shard that contains someone's memory and experience, if used you may gain ${levelName} experience from this"
      }
    },
    "keyFragment": {
      "name": {
        "vars": [
          "segmentDisplayName",
          "fragmentNum"
        ],
        "trans": "${segmentDisplayName} Schlüssel Fragment ${fragmentNum}",
        "eng": "${segmentDisplayName} Key Fragment ${fragmentNum}"
      },
      "description": {
        "vars": [
          "segmentDisplayName"
        ],
        "trans": "Secret key Fragment Use to brute-force a secret key.\r\n                                Use the Terminal at city center [Hub] to brute-force a ${segmentDisplayName} secret key.\r\n                                You can acquire each of the 3 required keys in each dungeon (both normal or challenge),\r\n                                when you acquired 3 keys, you may use Terminal to brute-force (Craft) a key to the next area",
        "eng": "Secret key Fragment Use to brute-force a secret key.\r\n                                Use the Terminal at city center [Hub] to brute-force a ${segmentDisplayName} secret key.\r\n                                You can acquire each of the 3 required keys in each dungeon (both normal or challenge),\r\n                                when you acquired 3 keys, you may use Terminal to brute-force (Craft) a key to the next area"
      }
    },
    "cache": {
      "name": {
        "vars": [
          "tierName",
          "typeName"
        ],
        "trans": "${tierName} ${typeName} Kiste",
        "eng": "${tierName} ${typeName} cache"
      },
      "description": {
        "vars": [
          "typeName"
        ],
        "trans": "A ${typeName} cache contains information used for Molecular 3D Printing, \r\n                    You can create a ${typeName} with the [Molecular 3d Printer] at [Central Hub].\r\n                    \r\n                    Pro tip: The level of item you get from printing is determined by your Printing Rank,\r\n                    so always print the trash ones first, as they cost less and useful to level up your Printing Rank",
        "eng": "A ${typeName} cache contains information used for Molecular 3D Printing, \r\n                    You can create a ${typeName} with the [Molecular 3d Printer] at [Central Hub].\r\n                    \r\n                    Pro tip: The level of item you get from printing is determined by your Printing Rank,\r\n                    so always print the trash ones first, as they cost less and useful to level up your Printing Rank"
      }
    }
  },
  "action": {
    "autoFarm": {
      "name": {
        "trans": "Farm Bot einsetzen",
        "eng": "Deploy farm bot"
      },
      "description": {
        "trans": "[AFK Exp Farm]\r\n        Setzt eine KI ein um für dich einen Dungeon zu bekämpfen. Das verwendet einen KI Kern, sie schafft normalerweise nur den einen Trip.",
        "eng": "[AFK Exp Farm]\r\n        Deploys an AI to dungeon for you. This will use up an AI Core, they usually only just manage the one trip."
      },
      "tut": {
        "trans": "DU kannst deine KI Kerne verwenden, die automatisch Gegner für dich bekämpft, während du weg bist.",
        "eng": "You can use your AI Core to Auto-Farm enemies while you AFK"
      }
    },
    "increasePrint": {
      "name": {
        "trans": "Arbeite in der Drucker Fabrik",
        "eng": "work in printing factory"
      },
      "description": {
        "trans": "Verbessere deinen Drucker Rang ohne dafür Tech Schrott zu verbrauchen. Das hilft dir den Level deiner gedruckten Ausrüstung zu erhöhen",
        "eng": "Improve Printing Rank without sacrificing tech scrap, this may help to increase the level of your prints."
      }
    },
    "increaseMedical": {
      "name": {
        "trans": "Hacke eine Body Mod Klinik",
        "eng": "Hack a Body Mod Clinic"
      },
      "description": {
        "trans": "Lade nützliche Daten von einer lokalen Body Mod Klinik herunter um bessere medizinische Bots und Drohnen herzustellen.",
        "eng": "Download useful data from a local body mod clinic to craft higher quality medical bots and drones."
      }
    },
    "increaseAmmo": {
      "name": {
        "trans": "Munition verbessern",
        "eng": "Improve Ammunition"
      },
      "description": {
        "trans": "Bastle an Munition herum, um effektivere Wege zu finden sie herzustellen.",
        "eng": "Tinker with ammunition, to find more effective ways of crafting it."
      }
    },
    "reverseEngineer": {
      "name": {
        "trans": "Nimm Tech Schrott auseinander um deinen Drucker Rang zu verbessern. \r\n        Dafür musst du etwas von deinem Tech Schrott opfern.",
        "eng": "Reverse engineer tech scrap to improve your Print Rank. \r\n        You’ll need to sacrifice some of your tech scrap."
      }
    },
    "reverseMining": {
      "name": {
        "trans": "Initiiere Crypto Mining",
        "eng": "initiate crypto mining"
      },
      "description": {
        "trans": "Das Betreiben von Crypto Mining wird dir Bitcoins einbringen, allerdings brennt die Quantum Prozessor Einheit, auch bekannt als QPE, aufgrund der intensiven Nutzung des Hash-Prozessors, öfter mal durch.",
        "eng": "Engaging in crypto mining will earn you Bitcoins, however due to the intense use of the Hash Processors, the Quantum Processing Unit, otherwise known as the QPU, will often burn out."
      }
    },
    "scavenge": {
      "name": {
        "vars": [
          "zoneName"
        ],
        "trans": "Plündere ${zoneName}",
        "eng": "Scavenge in ${zoneName}"
      },
      "description": {
        "vars": [
          "zoneName"
        ],
        "trans": "[AFK Resource Gather]\r\n                    Search around in ${zoneName} and scavenge for useful items.\r\n                    Who knows, maybe you'll get lucky!",
        "eng": "[AFK Resource Gather]\r\n                    Search around in ${zoneName} and scavenge for useful items.\r\n                    Who knows, maybe you'll get lucky!"
      }
    }
  },
  "tier": {
    "trash": {
      "name": {
        "trans": "Schrott",
        "eng": "trash"
      }
    },
    "common": {
      "name": {
        "trans": "Gewöhnlich",
        "eng": "common"
      }
    },
    "highQuality": {
      "name": {
        "trans": "Hohe Qualität",
        "eng": "high quality"
      }
    },
    "rare": {
      "name": {
        "trans": "Selten",
        "eng": "rare"
      }
    },
    "legendary": {
      "name": {
        "trans": "Legendär",
        "eng": "legendary"
      }
    },
    "epic": {
      "name": {
        "trans": "Episch",
        "eng": "epic"
      }
    }
  },
  "dungeon": {
    "normal": {
      "description": {
        "vars": [
          "expMultiplier",
          "keyFragmentDisplayName"
        ],
        "trans": "Empfohlenes Level:　${maxLevel}\r\n                    ${expMultiplier}x mal mehr EXP!\r\n                    Lässt ${keyFragmentDisplayName} fallen",
        "eng": "Recommended Level:　${maxLevel}\r\n                    ${expMultiplier}x times more EXP!\r\n                    Drops ${keyFragmentDisplayName}"
      },
      "startName": {
        "vars": [
          "zoneName"
        ],
        "trans": "Erkunde ${zoneName}",
        "eng": "Explore ${zoneName}"
      },
      "tut": {
        "vars": [
          "zoneName"
        ],
        "trans": "Gehe in den Dungeon um noch mehr Erfahrung und Gegenstände zu finden!\r\n                        Denk daran, dir genügend Heilungsgegenstände zu besorgen! Du regenerierst dich nach Dungeonkämpfen nicht.` ),\r\n                        shouldShow: (player) => player.getAverageItemLevel() > 5\r\n                    },\r\n                    config: {\r\n                        criticalRoom: [3, 4],\r\n                        additionalRoom: [2, 3],\r\n                        tiles: {\r\n                            SUPPLY_CRATE_1: { minMax: [0, 2] },\r\n                            AMMO_CRATE_1: { minMax: [0, 2] }\r\n                        },\r\n                        lastRoomTiles: {\r\n                            LOOT_CRATE: { minMax: [3, 4] },\r\n                            AMMO_CRATE_1: { minMax: [2, 3] },\r\n                            DYNAMIC_SECRET_KEY: {\r\n                                minMax: [1, 1],\r\n                                extraReward: {\r\n                                    items: [{ itemType: secreteKeyFragmentId as any }]\r\n                                }\r\n                            }\r\n                        },\r\n                        enemy: {\r\n                            normalRoom: [{\r\n                                amount: [2, 3],\r\n                                type: zoneId\r\n                            }],\r\n                            lastRoom: [{\r\n                                amount: [4, 6],\r\n                                type: zoneId,\r\n                            }]\r\n                        },\r\n                    }\r\n                });\r\n                DungeonSetting.values.push(normalDungeon);\r\n                const challengeDungeon = new DungeonSetting({\r\n                    name: challengeDungeonId,\r\n                    startName: lang('dungeon.challenge.startName', `attack ${zoneName}",
        "eng": "Dive into dungeon to get even more exp and loot!\r\n                        remember to buy some healing item! you won\"t regen after battle in dungeon` ),\r\n                        shouldShow: (player) => player.getAverageItemLevel() > 5\r\n                    },\r\n                    config: {\r\n                        criticalRoom: [3, 4],\r\n                        additionalRoom: [2, 3],\r\n                        tiles: {\r\n                            SUPPLY_CRATE_1: { minMax: [0, 2] },\r\n                            AMMO_CRATE_1: { minMax: [0, 2] }\r\n                        },\r\n                        lastRoomTiles: {\r\n                            LOOT_CRATE: { minMax: [3, 4] },\r\n                            AMMO_CRATE_1: { minMax: [2, 3] },\r\n                            DYNAMIC_SECRET_KEY: {\r\n                                minMax: [1, 1],\r\n                                extraReward: {\r\n                                    items: [{ itemType: secreteKeyFragmentId as any }]\r\n                                }\r\n                            }\r\n                        },\r\n                        enemy: {\r\n                            normalRoom: [{\r\n                                amount: [2, 3],\r\n                                type: zoneId\r\n                            }],\r\n                            lastRoom: [{\r\n                                amount: [4, 6],\r\n                                type: zoneId,\r\n                            }]\r\n                        },\r\n                    }\r\n                });\r\n                DungeonSetting.values.push(normalDungeon);\r\n                const challengeDungeon = new DungeonSetting({\r\n                    name: challengeDungeonId,\r\n                    startName: lang('dungeon.challenge.startName', `attack ${zoneName}"
      }
    },
    "challenge": {
      "description": {
        "vars": [
          "maxLevel",
          "keyFragmentDisplayName",
          "expMultiplier"
        ],
        "trans": "Recommended Level:　${maxLevel}+ with co-op\r\n                    ${expMultiplier}x more EXP!\r\n                    Challenge mode dungeon, extra loot and exp.\r\n                    Drops ${keyFragmentDisplayName}\r\n                    Not advised to enter if your level is too low",
        "eng": "Recommended Level:　${maxLevel}+ with co-op\r\n                    ${expMultiplier}x more EXP!\r\n                    Challenge mode dungeon, extra loot and exp.\r\n                    Drops ${keyFragmentDisplayName}\r\n                    Not advised to enter if your level is too low"
      },
      "tut": {
        "trans": "Are you strong enough? try it out on Challenge Dungeon,\r\n                        there is a strong boss and tons of loot at the end waiting for you!\r\n                        Its recommended to attempt this with other players.` ),\r\n                        shouldShow: (player) => player.getAverageItemLevel() >= 7\r\n                    },\r\n                    config: {\r\n                        criticalRoom: [4, 5],\r\n                        additionalRoom: [2, 3],\r\n                        tiles: {\r\n                            SUPPLY_CRATE_1: { minMax: [0, 2] },\r\n                            AMMO_CRATE_1: { minMax: [0, 2] },\r\n                        },\r\n                        lastRoomTiles: {\r\n                            LOOT_CRATE: { minMax: [3, 4] },\r\n                            AMMO_CRATE_1: { minMax: [2, 3] },\r\n                            DYNAMIC_TILE: {\r\n                                minMax: [2, 4],\r\n                                extraReward: {\r\n                                    items: [{ itemType: \"EXP_MEMORY\", chance: 1 },\r\n                                    {\r\n                                        oneOf: this.MISC_EXPERIENCE_MEMORIES.map(id => ({ itemType: id, weight: 10 }) as IWeightedItemDrop),\r\n                                        chance: 0.1\r\n                                    }]\r\n                                },\r\n                                displayName: \"Exp Memory\",\r\n                                perPlayer: true\r\n                            },\r\n                            DYNAMIC_TILE_2: {\r\n                                minMax: [3, 4],\r\n                                extraReward: {\r\n                                    money: {\r\n                                        scaling: {\r\n                                            ...Config.CREATURE.DEFAULT_MONEY,\r\n                                            MULTIPLIER: Config.CREATURE.DEFAULT_MONEY.MULTIPLIER * 4\r\n                                        }\r\n                                    }\r\n                                },\r\n                                displayName: `${Config.CURRENCY_NAME} stash`,\r\n                                perPlayer: true,\r\n                            },\r\n                            DYNAMIC_SECRET_KEY: {\r\n                                minMax: [1, 1],\r\n                                extraReward: {\r\n                                    items: [{ itemType: secreteKeyFragmentId as any }]\r\n                                }\r\n                            }\r\n                        },\r\n                        enemy: {\r\n                            normalRoom: [{\r\n                                amount: [3, 4],\r\n                                type: zoneId\r\n                            }],\r\n                            lastRoom: [{\r\n                                amount: [4, 6],\r\n                                type: zoneId,\r\n                            },\r\n                            {\r\n                                amount: [1, 1],\r\n                                type: `BOSS_${zoneId}`,\r\n                            }]\r\n                        },\r\n                    }\r\n                });\r\n                DungeonSetting.values.push(challengeDungeon);\r\n\r\n\r\n                // CREATE CREATURES \r\n\r\n                const names: string[] = [];\r\n                for (let ii = 0; ii < 5; ii++) {\r\n                    names.push(TextGen.generateBadGuy(ran));\r\n                }\r\n\r\n                CreatureSetting.values.push(new CreatureSetting({\r\n                    name: zoneId,\r\n                    names,\r\n                    traitChance: 0.5,\r\n                    weight: 100,\r\n                    ...DEFAULT_OPTIONS\r\n                }));\r\n\r\n                const bossNames = TextGen.getBossNames();\r\n                CreatureSetting.values.push(new CreatureSetting({\r\n                    name: `BOSS_${zoneId}`,\r\n                    names: bossNames,\r\n                    traitChance: 0.5,\r\n                    weight: 100,\r\n                    ...DEFAULT_OPTIONS,\r\n                    healthFactor: 15,\r\n                    damageFactor: 2,\r\n                    expConfig: {\r\n                        ...DEFAULT_EXP,\r\n                        MULTIPLIER: DEFAULT_EXP.MULTIPLIER * 15\r\n                    },\r\n                    moneyConfig: {\r\n                        ...Config.CREATURE.DEFAULT_MONEY,\r\n                        MULTIPLIER: Config.CREATURE.DEFAULT_MONEY.MULTIPLIER * 15\r\n                    },\r\n                    drops: [...CreatureSetting.DEFAULT_DROPS,\r\n                    { itemType: \"UNKNOWN_EQUIPMENT\", amount: 1 },\r\n                    { itemType: \"UNKNOWN_EQUIPMENT\", amount: 1 },\r\n                    { itemType: \"UNKNOWN_EQUIPMENT\", amount: 1 },\r\n                    { itemType: \"UNKNOWN_EQUIPMENT\", amount: 1 },\r\n                    { itemType: \"UNKNOWN_WEAPON\", amount: 1 },\r\n                    { itemType: \"UNKNOWN_WEAPON\", amount: 1 },\r\n                    { itemType: \"AI_CORE\", minAmount: 3, maxAmount: 6 },\r\n                    { itemType: \"HASH_PROCESSOR\", minAmount: 3, maxAmount: 6 }\r\n                    ],\r\n                }));\r\n\r\n                zoneIndex++;\r\n                allZoneIndex++;\r\n            }\r\n            segmentLoc[\"options\"].linkedLocation.push({\r\n                to: \"STATION_1\",\r\n                displayName: lang('location.zone.toStation.name', \"back to Hyper Train Station",
        "eng": "Are you strong enough? try it out on Challenge Dungeon,\r\n                        there is a strong boss and tons of loot at the end waiting for you!\r\n                        Its recommended to attempt this with other players.` ),\r\n                        shouldShow: (player) => player.getAverageItemLevel() >= 7\r\n                    },\r\n                    config: {\r\n                        criticalRoom: [4, 5],\r\n                        additionalRoom: [2, 3],\r\n                        tiles: {\r\n                            SUPPLY_CRATE_1: { minMax: [0, 2] },\r\n                            AMMO_CRATE_1: { minMax: [0, 2] },\r\n                        },\r\n                        lastRoomTiles: {\r\n                            LOOT_CRATE: { minMax: [3, 4] },\r\n                            AMMO_CRATE_1: { minMax: [2, 3] },\r\n                            DYNAMIC_TILE: {\r\n                                minMax: [2, 4],\r\n                                extraReward: {\r\n                                    items: [{ itemType: \"EXP_MEMORY\", chance: 1 },\r\n                                    {\r\n                                        oneOf: this.MISC_EXPERIENCE_MEMORIES.map(id => ({ itemType: id, weight: 10 }) as IWeightedItemDrop),\r\n                                        chance: 0.1\r\n                                    }]\r\n                                },\r\n                                displayName: \"Exp Memory\",\r\n                                perPlayer: true\r\n                            },\r\n                            DYNAMIC_TILE_2: {\r\n                                minMax: [3, 4],\r\n                                extraReward: {\r\n                                    money: {\r\n                                        scaling: {\r\n                                            ...Config.CREATURE.DEFAULT_MONEY,\r\n                                            MULTIPLIER: Config.CREATURE.DEFAULT_MONEY.MULTIPLIER * 4\r\n                                        }\r\n                                    }\r\n                                },\r\n                                displayName: `${Config.CURRENCY_NAME} stash`,\r\n                                perPlayer: true,\r\n                            },\r\n                            DYNAMIC_SECRET_KEY: {\r\n                                minMax: [1, 1],\r\n                                extraReward: {\r\n                                    items: [{ itemType: secreteKeyFragmentId as any }]\r\n                                }\r\n                            }\r\n                        },\r\n                        enemy: {\r\n                            normalRoom: [{\r\n                                amount: [3, 4],\r\n                                type: zoneId\r\n                            }],\r\n                            lastRoom: [{\r\n                                amount: [4, 6],\r\n                                type: zoneId,\r\n                            },\r\n                            {\r\n                                amount: [1, 1],\r\n                                type: `BOSS_${zoneId}`,\r\n                            }]\r\n                        },\r\n                    }\r\n                });\r\n                DungeonSetting.values.push(challengeDungeon);\r\n\r\n\r\n                // CREATE CREATURES \r\n\r\n                const names: string[] = [];\r\n                for (let ii = 0; ii < 5; ii++) {\r\n                    names.push(TextGen.generateBadGuy(ran));\r\n                }\r\n\r\n                CreatureSetting.values.push(new CreatureSetting({\r\n                    name: zoneId,\r\n                    names,\r\n                    traitChance: 0.5,\r\n                    weight: 100,\r\n                    ...DEFAULT_OPTIONS\r\n                }));\r\n\r\n                const bossNames = TextGen.getBossNames();\r\n                CreatureSetting.values.push(new CreatureSetting({\r\n                    name: `BOSS_${zoneId}`,\r\n                    names: bossNames,\r\n                    traitChance: 0.5,\r\n                    weight: 100,\r\n                    ...DEFAULT_OPTIONS,\r\n                    healthFactor: 15,\r\n                    damageFactor: 2,\r\n                    expConfig: {\r\n                        ...DEFAULT_EXP,\r\n                        MULTIPLIER: DEFAULT_EXP.MULTIPLIER * 15\r\n                    },\r\n                    moneyConfig: {\r\n                        ...Config.CREATURE.DEFAULT_MONEY,\r\n                        MULTIPLIER: Config.CREATURE.DEFAULT_MONEY.MULTIPLIER * 15\r\n                    },\r\n                    drops: [...CreatureSetting.DEFAULT_DROPS,\r\n                    { itemType: \"UNKNOWN_EQUIPMENT\", amount: 1 },\r\n                    { itemType: \"UNKNOWN_EQUIPMENT\", amount: 1 },\r\n                    { itemType: \"UNKNOWN_EQUIPMENT\", amount: 1 },\r\n                    { itemType: \"UNKNOWN_EQUIPMENT\", amount: 1 },\r\n                    { itemType: \"UNKNOWN_WEAPON\", amount: 1 },\r\n                    { itemType: \"UNKNOWN_WEAPON\", amount: 1 },\r\n                    { itemType: \"AI_CORE\", minAmount: 3, maxAmount: 6 },\r\n                    { itemType: \"HASH_PROCESSOR\", minAmount: 3, maxAmount: 6 }\r\n                    ],\r\n                }));\r\n\r\n                zoneIndex++;\r\n                allZoneIndex++;\r\n            }\r\n            segmentLoc[\"options\"].linkedLocation.push({\r\n                to: \"STATION_1\",\r\n                displayName: lang('location.zone.toStation.name', \"back to Hyper Train Station"
      }
    }
  },
  "secretKey": {
    "name": {
      "vars": [
        "segmentDisplayName"
      ],
      "trans": "${segmentDisplayName} Geheimschlüssel",
      "eng": "${segmentDisplayName} Secret Key"
    },
    "unlockVerb": {
      "trans": "brute-force",
      "eng": "brute-force"
    }
  },
  "quest": {
    "progression": {
      "vars": [
        "segmentDisplayName"
      ],
      "trans": "Progression-${progressionId}",
      "eng": "Acquire 3 different Key Fragments from each dungeons located in ${segmentDisplayName},\r\n                these are used to create the key to next zone.\r\n                To craft the key, go to terminal in [HUB]"
    }
  }
}